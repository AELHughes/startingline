import { Pool } from 'pg';
import type { User, CreateUserData } from '../types';
declare const pool: Pool;
export declare function createUser(userData: CreateUserData): Promise<User>;
export declare function authenticateUser(email: string, password: string): Promise<User>;
export declare function getUserById(userId: string): Promise<User | null>;
export declare function getUserByEmail(email: string): Promise<User | null>;
export declare function updateUser(userId: string, updates: Partial<User>): Promise<User>;
export declare function deleteUser(userId: string): Promise<void>;
export declare function isAdminUser(email: string): Promise<boolean>;
export declare function updatePassword(userId: string, newPassword: string): Promise<void>;
export declare function verifyPassword(userId: string, password: string): Promise<boolean>;
export declare function testConnection(): Promise<boolean>;
export declare function getTableCounts(): Promise<Record<string, number>>;
export declare function createAuditTrailEntry(eventId: string, actionType: string, performedBy: string, performedByRole: 'organiser' | 'admin', message?: string, metadata?: any): Promise<any>;
export declare function getEventAuditTrail(eventId: string): Promise<any[]>;
export declare function createNotification(userId: string, type: string, title: string, message: string, link?: string, metadata?: any): Promise<any>;
export declare function getUserNotifications(userId: string, limit?: number): Promise<any[]>;
export declare function getUnreadNotificationCount(userId: string): Promise<number>;
export declare function markNotificationAsRead(notificationId: string, userId: string): Promise<any>;
export declare function markAllNotificationsAsRead(userId: string): Promise<any[]>;
export declare function createMessage(eventId: string | null, senderId: string, recipientId: string, subject: string, body: string, parentMessageId?: string): Promise<any>;
export declare function getUserMessages(userId: string, limit?: number): Promise<any[]>;
export declare function getMessageThread(messageId: string, userId: string): Promise<any[]>;
export declare function markMessageAsRead(messageId: string, userId: string): Promise<any>;
export declare function getUnreadMessageCount(userId: string): Promise<number>;
export { pool };
export default pool;
//# sourceMappingURL=database.d.ts.map